/**
 *  Description     :   Send text message to the Mobile number provided by the user using Twilio via salesforce UI.
 *
 *  Created By      :   
 *
 *  Created Dare    :   6/20/2014                
 *
 *  Version         :   V1.0
 **/  
public with sharing class TwilioIntegrationWithSfdcPOC {

    //Mobile Number
    public String mobileNumber { get; set; }          
          
    //Text message
    public String textMessage { get; set; }
    
    //Required parameters
    private static final String VERSION = '3.2.0';
    private String endpoint = 'https://api.twilio.com';
    public static final String DEFAULT_VERSION = '2010-04-01';
    private String accountSid;
    private String authToken;
    public String phoneNumber;
    
    // Variable to hold the reponse
    public MessageResponse smsRes { get; set; }
    
    // constructor
    public TwilioIntegrationWithSfdcPOC() {
    
        //Initiallizing
        mobileNumber = Null;
        textMessage = '';
        MessageResponse smsRes = new MessageResponse();
        
        //Referencing custom setting data       
        Twilio_Configuration__c config = Twilio_Configuration__c.getInstance();
        accountSid = config.accountSID__c;
        authToken = config.authToken__c;
        phoneNumber = config.fromPhoneNumber__c;    
    }
    
    //Method to hit http request
    public void sendTextMessage() {
        
        //variable ot hold the response
        String responseBody = '';
        
        //Endpoint URL
        String path = endpoint + '/' + DEFAULT_VERSION + '/Accounts/' + this.accountSid + '/SMS/Messages.json';
        URL uri = new URL(path);
        String entity = '';
        
        //Check for mobile number and text message
        if(mobileNumber != Null && textMessage != '') {
            entity += (entity=='' ? '' : '&')+ 'To' + '=' + EncodingUtil.urlEncode(string.valueOf(mobileNumber), 'UTF-8');
            entity += (entity=='' ? '' : '&')+ 'Body' + '=' + EncodingUtil.urlEncode(textMessage, 'UTF-8');
            entity += (entity=='' ? '' : '&')+ 'From' + '=' + EncodingUtil.urlEncode(phoneNumber, 'UTF-8');
        } else {
            ApexPages.Message myMsg = new ApexPages.Message(ApexPages.Severity.ERROR,'Mobile Number and Text Message are required.');       
            ApexPages.addMessage(myMsg); 
            return;
        }
        
        //Initiallize http request
        Http h = new Http();
        HttpRequest request = new HttpRequest();
        
        //Append parameters to the request
        request.setHeader('X-Twilio-Client', 'salesforce-' + VERSION);
        request.setHeader('User-Agent', 'twilio-salesforce/' + VERSION);
        request.setHeader('Accept', 'application/json');
        request.setHeader('Accept-Charset', 'utf-8');
        request.setHeader('Authorization', 'Basic '+EncodingUtil.base64Encode(Blob.valueOf(this.accountSid + ':' + this.authToken)));
        request.setEndpoint(uri.toExternalForm());
        request.setMethod('POST');
        request.setBody(entity);
    
        //Check for text is running 
        if(!Test.isRunningTest()) {              
            //Send request
            HttpResponse res = h.send(request);
            responseBody = res.getBody();
            System.debug('responseBody:::::::::::' +responseBody);     
        } else {
            responseBody =  '{"sid":"SMba4ab2fafa3d709004359818f50a67eb","date_created":"Thu, 12 Dec 2013 15:13:06 +0000","date_updated":"Thu, 12 Dec 2013 15:13:06 +0000","date_sent":null,"account_sid":"ACfdd0fcec687020b86d09fa8451c4b614","to":"+919820242561","from":"+13047132065","body":"Hello there!","status":"queued","direction":"outbound-api","api_version":"2010-04-01","price":-0.01,"price_unit":"USD","uri":"/2010-04-01/Accounts/ACfdd0fcec687020b86d09fa8451c4b614/SMS/Messages/SMba4ab2fafa3d709004359818f50a67eb.json","num_segments":"1"}';
            
        }
        smsRes = (MessageResponse)JSON.deserialize(responseBody, MessageResponse.class);
        System.debug('smsRes:::::::' + smsRes);
        
        String invalidNumber = smsRes.message;
        System.debug('invalidNumber:::::::' + invalidNumber);
        
        if(smsRes.status == 'queued') {
            ApexPages.Message myMsg = new ApexPages.Message(ApexPages.Severity.ERROR,'Message successfully sent..!!');       
            ApexPages.addMessage(myMsg);  
        } else if(smsRes.status == '400'){
            ApexPages.Message myMsg = new ApexPages.Message(ApexPages.Severity.ERROR,'Phone number is not valid');       
            ApexPages.addMessage(myMsg); 
        }     
    }
    
    //Wrapper class fro response
    public class MessageResponse {
        public String status;
        public String message;
    }
}
